FROM node:21-alpine3.18 AS base
 
#  PREPARATION STAGE
FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
# Set working directory
WORKDIR /app
RUN npm i -g turbo
COPY .. .
RUN npx turbo prune bootstrap-popout-windows --docker

# INSTALLER STAGE
# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app
 
# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/package-lock.json ./package-lock.json
RUN npm ci

# Build the project
COPY --from=builder /app/out/full/ .
RUN npx turbo run build --filter=bootstrap-popout-windows...
 
#  RUNNER STAGE
FROM docker.io/nginxinc/nginx-unprivileged:alpine3.18-slim
WORKDIR /app
# Don't run production as root
# RUN addgroup --system --gid 1001 nginx
# RUN adduser --system --uid 1001 nginx
# USER nginx

COPY --from=installer /app/apps/bootstrap-popout-windows/dist /usr/share/nginx/html
COPY nginx/conf.d /etc/nginx/nginx.conf

EXPOSE 8080
CMD ["nginx", "-g", "daemon off;"]
